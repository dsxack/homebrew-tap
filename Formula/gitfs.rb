# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gitfs < Formula
  desc "FUSE filesystem for browsing contents of git repositories revisions"
  homepage "https://github.com/dsxack/gitfs"
  version "1.4.5"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/dsxack/gitfs/releases/download/v1.4.5/gitfs_Darwin_arm64.tar.gz"
      sha256 "50bd8e4ff481c17322c548a15634a0c1a0572c85ebe36e8ac4147b57340ba7f0"

      def install
        bin.install "gitfs"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dsxack/gitfs/releases/download/v1.4.5/gitfs_Darwin_x86_64.tar.gz"
      sha256 "e2cff39b2484c9738c41966f36bc9714a2c4e3f01d78baed70d97f5dbce54218"

      def install
        bin.install "gitfs"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dsxack/gitfs/releases/download/v1.4.5/gitfs_Linux_arm64.tar.gz"
      sha256 "03d2dc2efe1fa9e0213b357576cc6f7ff623bf72514d3f60af17eabc4b550ce9"

      def install
        bin.install "gitfs"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/dsxack/gitfs/releases/download/v1.4.5/gitfs_Linux_x86_64.tar.gz"
      sha256 "42d7077649c0ec0571e4037ff0aa4da728330ee1fc364b556c48422cf5ebea9f"

      def install
        bin.install "gitfs"
      end
    end
  end

  class MacFuseRequirement < Requirement
    fatal true

    satisfy(build_env: false) do
      File.exist?("/usr/local/include/fuse/fuse.h") &&
        !File.symlink?("/usr/local/include/fuse")
    end

    def message
      <<~EOS
        macFUSE is required; install it via:
        brew install --cask macfuse
      EOS
    end
  end

  depends_on "libfuse" if OS.linux?
  depends_on MacFuseRequirement if OS.mac?

  test do
    system "#{bin}/gitfs", "version"
  end
end
