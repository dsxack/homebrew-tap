# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gitfs < Formula
  desc "FUSE filesystem for browsing contents of git repositories revisions"
  homepage "https://github.com/dsxack/gitfs"
  version "1.4.4"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/dsxack/gitfs/releases/download/v1.4.4/gitfs_Darwin_x86_64.tar.gz"
      sha256 "ccb3c08c69761f28f92d56830c073139d20845a039ae93bdf01379e161077f6d"

      def install
        bin.install "gitfs"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/dsxack/gitfs/releases/download/v1.4.4/gitfs_Darwin_arm64.tar.gz"
      sha256 "43eab52bf1c51164e58baee581c86bac03103a9cfbbd8fdfb8387967bfbf4013"

      def install
        bin.install "gitfs"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/dsxack/gitfs/releases/download/v1.4.4/gitfs_Linux_x86_64.tar.gz"
      sha256 "65d6c21d80cf6d27d265e977cc8a7f1bd000444249ee1610e455e4e6ef24fb51"

      def install
        bin.install "gitfs"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/dsxack/gitfs/releases/download/v1.4.4/gitfs_Linux_arm64.tar.gz"
      sha256 "e57f5e152a07b077e211887ab82581503a1355c8c030feb64e65b4fd55c8063d"

      def install
        bin.install "gitfs"
      end
    end
  end

  class MacFuseRequirement < Requirement
    fatal true

    satisfy(build_env: false) do
      File.exist?("/usr/local/include/fuse/fuse.h") &&
        !File.symlink?("/usr/local/include/fuse")
    end

    def message
      <<~EOS
        macFUSE is required; install it via:
        brew install --cask macfuse
      EOS
    end
  end

  depends_on "libfuse" if OS.linux?
  depends_on MacFuseRequirement if OS.mac?

  test do
    system "#{bin}/gitfs", "version"
  end
end
